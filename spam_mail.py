# -*- coding: utf-8 -*-
"""Spam mail.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zqDoFp6v6XAbCmU2fx9ExDTI5J8hy5lI
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

spam_df=pd.read_csv("/content/drive/MyDrive/dataset/emails.csv")

spam_df

spam_df.head(10)

spam_df.tail(10)

spam_df.describe()

spam_df.info()

ham=spam_df[spam_df['spam']==0]

spam=spam_df[spam_df['spam']==1]

ham

spam

print('Spam Percentage =',(len(spam)/len(spam_df))*100,'%')

print('Ham Percentage =',(len(ham)/len(spam_df))*100,'%')

sns.countplot(spam_df['spam'],label='Spam vs Ham')

from sklearn.feature_extraction.text import CountVectorizer
vectorizer=CountVectorizer()
spamham_countVectorizer=vectorizer.fit_transform(spam_df['text'])

spamham_countVectorizer.shape

label=spam_df['spam']
X=spamham_countVectorizer
y=label

X.shape

y.shape

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2)

from sklearn.naive_bayes import MultinomialNB

NB_classifier=MultinomialNB()
NB_classifier.fit(X_train,y_train)

from sklearn.metrics import classification_report,confusion_matrix

y_predict_train=NB_classifier.predict(X_train)
y_predict_train

cm=confusion_matrix(y_train,y_predict_train)

sns.heatmap(cm,annot=True)

y_predict_test=NB_classifier.predict(X_test)
y_predict_test

cm=confusion_matrix(y_test,y_predict_test)

sns.heatmap(cm,annot=True)

print(classification_report(y_test,y_predict_test))